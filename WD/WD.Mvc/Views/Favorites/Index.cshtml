@model List<WD.Mvc.Models.FavoritoClimaViewModel>
@{
    ViewData["Title"] = "Mis Favoritos";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var unitSymbol = (ViewBag.TempUnitSymbol as string) ?? "°C";
    var apiUnits = unitSymbol.Contains("F") ? "imperial" : "metric";
}
<!-- Bootstrap -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/StyleSheet.css" asp-append-version="true" />


<h2 class="mt-4">🌟 Mis Favoritos</h2>

@if (!Model.Any())
{
    <p>No tienes ninguna ciudad agregada a favoritos.</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var fav in Model)
        {
            <div class="col">
                <div class="card shadow h-100 glass-card" style="border-radius:15px;">
                    <div class="card-body">
                        <h5 class="card-title text-white">@fav.Favorito.Ciudad, @fav.Favorito.Pais</h5>
                        @if (!string.IsNullOrWhiteSpace(fav.Favorito.Descripcion))
                        {
                            <p class="card-text">
                                <strong>Descripción:</strong> @fav.Favorito.Descripcion
                            </p>
                        }
                        <button type="button" class="btn btn-sm btn-info mb-2"
                                data-bs-toggle="modal"
                                data-bs-target="#editarDescripcionModal_@fav.Favorito.IdFavorito">
                            Modificar descripción
                        </button>
                        <p class="card-text">
                            <small class="text-white">
                                Agregado el @fav.Favorito.FechaAgregado.ToString("dddd dd 'de' MMMM 'de' yyyy", new System.Globalization.CultureInfo("es-ES"))
                            </small>
                        </p>
                        @if (fav.Temperatura != null)
                        {
                            <p class="card-text">
                                <strong>Temperatura:</strong> @fav.Temperatura @unitSymbol
                            </p>
                        }
                        @if (fav.Humedad != null)
                        {
                            <p class="card-text">
                                <strong>Humedad:</strong> @fav.Humedad%
                            </p>
                        }
                        @if (!string.IsNullOrWhiteSpace(fav.WeatherDescription))
                        {
                            <p class="card-text">
                                <strong>Clima:</strong> @fav.WeatherDescription
                            </p>
                        }
                      
                        <button type="button"
                                class="btn btn-sm btn-primary ver-clima-btn"
                                data-ciudad="@fav.Favorito.Ciudad"
                                data-pais="@fav.Favorito.Pais"
                                data-units="@apiUnits"
                                data-bs-toggle="modal"
                                data-bs-target="#weatherDetailsModal">
                            Ver Clima
                        </button>
                      
                        <div class="d-flex flex-wrap align-items-center gap-2 my-3">
                            <a asp-controller="Home" asp-action="Index"
                               asp-route-searchQuery="@($"{fav.Favorito.Ciudad}, {fav.Favorito.Pais}")"
                               class="btn btn-outline-primary btn-sm">
                                Ver Clima
                            </a>

                            <form asp-controller="Favorites" asp-action="UpdatePrioridad" method="post" class="d-flex align-items-center gap-2">
                                <input type="hidden" name="idFavorito" value="@fav.Favorito.IdFavorito" />
                                <select name="prioridad" class="form-select form-select-sm w-auto">
                                    <option value="bajo" selected="@(fav.Favorito.Prioridad == "bajo")">Bajo</option>
                                    <option value="medio" selected="@(fav.Favorito.Prioridad == "medio")">Medio</option>
                                    <option value="alto" selected="@(fav.Favorito.Prioridad == "alto")">Alto</option>
                                </select>
                                <button type="submit" class="btn btn-success btn-sm">Guardar</button>
                            </form>
                        </div>

                        <form asp-controller="Favorites" asp-action="Delete" method="post">
                        

                            @Html.AntiForgeryToken()
                            <input type="hidden" name="idFavorito" value="@fav.Favorito.IdFavorito" />
                            <button type="submit" class="btn btn-outline-danger btn-sm">Eliminar</button>
                        </form>

                    </div>
                </div>
            </div>

            <div class="modal fade" id="editarDescripcionModal_@fav.Favorito.IdFavorito" tabindex="-1" aria-labelledby="editarDescripcionLabel_@fav.Favorito.IdFavorito" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form asp-controller="Favorites" asp-action="UpdateDescripcion" method="post">
                            @Html.AntiForgeryToken()
                            <div class="modal-header">
                                <h5 class="modal-title" id="editarDescripcionLabel_@fav.Favorito.IdFavorito">Modificar descripción</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                            </div>
                            <div class="modal-body">
                                <input type="hidden" name="idFavorito" value="@fav.Favorito.IdFavorito" />
                                <div class="mb-3">
                                    <label for="descripcion_@fav.Favorito.IdFavorito" class="form-label">Descripción</label>
                                    <textarea name="descripcion" id="descripcion_@fav.Favorito.IdFavorito" class="form-control" maxlength="250" required>@fav.Favorito.Descripcion</textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-success">Guardar</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="modal fade" id="weatherDetailsModal" tabindex="-1" aria-labelledby="weatherDetailsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="weatherDetailsLabel">Clima</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body text-dark">
                    <div class="d-flex align-items-center">
                        <div class="spinner-border me-2" role="status"></div>
                        Cargando...
                    </div>
                </div>
                <div class="modal-footer">
                    <small class="text-muted me-auto">Datos provistos por OpenWeather</small>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="eliminadoModal" tabindex="-1" aria-labelledby="eliminadoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="eliminadoModalLabel">Eliminado</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body text-dark">
                    @Html.Raw(TempData["EliminadoMensaje"])
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var eliminadoMensaje = '@TempData["EliminadoMensaje"]';
            if (eliminadoMensaje) {
                var eliminadoModal = new bootstrap.Modal(document.getElementById('eliminadoModal'));
                eliminadoModal.show();
            }

            const modalEl = document.getElementById('weatherDetailsModal');
            const titleEl = modalEl.querySelector('.modal-title');
            const bodyEl = modalEl.querySelector('.modal-body');

            document.querySelectorAll('.ver-clima-btn').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const ciudad = btn.dataset.ciudad;
                    const pais = btn.dataset.pais;
                    const units = btn.dataset.units;
                    const unitSymbol = '@unitSymbol';
                    const windUnit = units === 'imperial' ? 'mph' : 'm/s';

                    titleEl.textContent = `Clima en ${ciudad}, ${pais}`;
                    bodyEl.innerHTML = '<div class="d-flex align-items-center"><div class="spinner-border me-2" role="status"></div> Cargando...</div>';

                    try {
                        const q = encodeURIComponent(`${ciudad},${pais}`);
                        const apiBase = '@(System.Environment.GetEnvironmentVariable("WEATHER_API_BASEURL") ?? "https://localhost:7215")';
                        const res = await fetch(`${apiBase}/api/Weather/search?q=${q}&limit=1&units=${units}`);
                        if (!res.ok) throw new Error('Error al consultar el clima');
                        const data = await res.json();
                        const w = Array.isArray(data) && data.length ? data[0] : null;
                        if (!w) {
                            bodyEl.innerHTML = '<div class="alert alert-warning mb-0">No se encontraron datos.</div>';
                            return;
                        }

                        const items = [];
                        const val = (v, suffix = '') => (v ?? 'N/A') + (v != null ? suffix : '');

                        items.push(`<li><strong>Descripción:</strong> ${w.description ?? 'N/A'}</li>`);
                        items.push(`<li><strong>Temperatura:</strong> ${val(w.temp, ' ' + unitSymbol)}</li>`);
                        items.push(`<li><strong>Sensación térmica:</strong> ${val(w.feels_like, ' ' + unitSymbol)}</li>`);
                        items.push(`<li><strong>Temp min/max:</strong> ${(w.temp_min ?? 'N/A')} / ${(w.temp_max ?? 'N/A')} ${unitSymbol}</li>`);
                        items.push(`<li><strong>Humedad:</strong> ${val(w.humidity, '%')}</li>`);
                        items.push(`<li><strong>Presión:</strong> ${val(w.pressure, ' hPa')}</li>`);
                        if (w.sea_level != null) items.push(`<li><strong>Nivel del mar:</strong> ${w.sea_level} hPa</li>`);
                        if (w.grnd_level != null) items.push(`<li><strong>Nivel del suelo:</strong> ${w.grnd_level} hPa</li>`);
                        items.push(`<li><strong>Coordenadas:</strong> ${(w.lat ?? 'N/A')}, ${(w.lon ?? 'N/A')}</li>`);
                        if (w.visibility != null) items.push(`<li><strong>Visibilidad:</strong> ${w.visibility} m</li>`);
                        if (w.clouds_all != null) items.push(`<li><strong>Nubosidad:</strong> ${w.clouds_all}%</li>`);

                        const windParts = [];
                        if (w.wind_speed != null) windParts.push(`${w.wind_speed} ${windUnit}`);
                        if (w.wind_deg != null) windParts.push(`${w.wind_deg}°`);
                        if (w.wind_gust != null) windParts.push(`racha ${w.wind_gust} ${windUnit}`);
                        items.push(`<li><strong>Viento:</strong> ${windParts.join(', ') || 'N/A'}</li>`);

                        bodyEl.innerHTML = `<ul class="mb-0">${items.join('')}</ul>`;
                    } catch (err) {
                        bodyEl.innerHTML = `<div class="alert alert-danger mb-0">${err.message}</div>`;
                    }
                });
            });
        });
    </script>
}
